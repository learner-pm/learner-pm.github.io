import{_ as n,g as s}from"./app.c477418c.js";const a={},p=s(`<h1 id="\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B" aria-hidden="true">#</a> \u7C7B\u578B</h1><p>JavaScript \u5185\u90E8\u5185\u7F6E\u4E03\u79CD\u7C7B\u578B\uFF0C\u5927\u65B9\u9762\u53EF\u5212\u5206\u4E3A\u57FA\u672C\u7C7B\u578B\u548C\u5BF9\u8C61\u7C7B\u578B(Object)\u3002</p><p>\u57FA\u672C\u7C7B\u578B\u5206\u4E3A\uFF1A<code>number</code> ,<code>string</code>,<code>symbol</code>,<code>null</code>,<code>undefined</code>,<code>boolen</code>\u3002</p><p>\u5BF9\u8C61\u7C7B\u578B:<code>object</code>,js \u5185\u7F6E\u5BF9\u8C61\u5982<code>array</code>,<code>regExp</code>\uFF0C<code>number</code>\u7B49\uFF0C\u5B83\u4EEC\u90FD\u53EF\u4EE5\u770B\u6210\u662F<code>object</code>\u5F97\u5B50\u7C7B\u3002</p><p>\u57FA\u672C\u7C7B\u578B\u50A8\u5B58\u5728<code>\u6808</code>\u7A7A\u95F4\u4E0A\uFF0C\u5BF9\u8C61\u7C7B\u578B\u50A8\u5B58\u5728<code>\u5806</code>\u4E2D\u3002</p><h2 id="\u58F0\u660E\u53D8\u91CF" tabindex="-1"><a class="header-anchor" href="#\u58F0\u660E\u53D8\u91CF" aria-hidden="true">#</a> \u58F0\u660E\u53D8\u91CF</h2><p>JavaScript \u4F7F\u7528<code>const</code>,<code>let</code>,<code>var</code>\u6765\u58F0\u660E\u4E00\u4E2A\u53D8\u91CF\u3002\u4F7F\u7528\u4F18\u5148\u7EA7<code>cosnt</code>&gt;<code>let</code>&gt;<code>var</code>\u3002</p><p><code>const</code>\u58F0\u660E\u5F97\u666E\u901A\u53D8\u91CF\u65E0\u6CD5\u5728\u58F0\u660E\u540E\u518D\u6B21\u4FEE\u6539\u503C\uFF0C\u6240\u4EE5\u4E00\u822C\u628A\u4F7F\u7528<code>const</code>\u53D8\u91CF\u7684\u53D8\u91CF\u5F53\u4F5C\u5E38\u91CF\u5BF9\u5F85,\u5982 <strong>PI</strong>\u3002</p><p>\u5F53\u8D4B\u503C\u7ED9<code>const</code>\u53D8\u91CF\u7684\u4E3A\u4E00\u4E2A\u5BF9\u8C61\u65F6\uFF0C<code>const</code>\u58F0\u660E\u7684\u53D8\u91CF\u50A8\u5B58\u7684\u662F\u4E00\u4E2A<code>\u6307\u9488</code>\uFF0C\u8FD9\u4E2A\u6307\u9488\u6307\u5411\u5BF9\u8C61\u6240\u5904\u5F97<code>\u5806</code>\u4F4D\u7F6E\uFF0C<strong>\u6307\u9488\u4E0D\u80FD\u4FEE\u6539\uFF0C\u4F46\u53EF\u4FEE\u6539\u5BF9\u8C61\u5185\u90E8\u5C5E\u6027</strong>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">PI</span> <span class="token operator">=</span> <span class="token string">&quot;3.14&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//{a: 1}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>let</code>\u9700\u8981\u5148\u58F0\u660E\uFF0C\u518D\u8D4B\u503C\uFF08\u4FDD\u6301\u5148\u58F0\u660E\uFF0C\u518D\u8D4B\u503C\u7684\u4E60\u60EF\u5229\u4E8E\u5199\u51FA\u542B\u6709\u66F4\u5C11\u7684 bug \u7684\u4EE3\u7801\uFF09,\u540C\u65F6\u4F7F\u7528<code>let</code>\u58F0\u660E\u7684\u53D8\u91CF\u4F1A\u5F62\u6210\u5757\u7EA7\u4F5C\u7528\u57DF\u3002<code>const</code>\u540C\u7406\u3002</p><p>\u540C\u65F6\u5728\u6D4F\u89C8\u5668\u73AF\u5883\u4E2D\uFF0C<code>let</code>\u58F0\u660E\u5F97\u53D8\u91CF\u4E0D\u4F1A\u6302\u8F7D\u5230\u5168\u5C40\u3002<code>let</code>\u548C<code>const</code>\u5747\u4E0D\u5141\u8BB8\u91CD\u590D\u58F0\u660E\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a<span class="token punctuation">;</span>
a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>var</code>\u58F0\u660E\u7684\u53D8\u91CF\u5177\u6709\u63D0\u5347\u673A\u5236,\u6240\u4EE5\u53EF\u4EE5\u5728\u53D8\u91CF\u58F0\u660E\u524D\u4F7F\u7528\u53D8\u91CF\uFF0C\u663E\u5F97\u5F88\u4E0D\u597D\uFF0C\u4F1A\u4EA7\u751F\u610F\u60F3\u4E0D\u5230\u7684<code>BUG</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//undefined ,\u5F88\u4E0D\u5408\u7406</span>
<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><code>let</code>\u5176\u5B9E\u4E5F\u6709\u8FD9\u4E2A\u673A\u5236\uFF0C\u4E0D\u8FC7\u5B83\u5B58\u5728<strong>\u6682\u65F6\u6027\u6B7B\u533A</strong>,\u4F1A\u5BFC\u81F4\u5728\u58F0\u660E\u8FD9\u4E2A\u53D8\u91CF\u524D\u4F7F\u7528\u53D8\u91CF\u4F1A\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Uncaught ReferenceError: Cannot access &#39;a&#39; before initialization</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u57FA\u672C\u7C7B\u578B\u4E2D\uFF0C\u8FD9\u4E9B\u5B57\u9762\u91CF\u4F7F\u7528<code>toString()</code>\u7B49\u65B9\u6CD5\u5F97\u65F6\u5019\u4F1A\u8F6C\u53D8\u4E3A\u5176\u5BF9\u5E94\u5305\u88C5\u5BF9\u8C61,\u7136\u540E\u6765\u6267\u884C\u5BF9\u5E94\u65B9\u6CD5\u3002 \u5BF9\u8C61\u8F6C\u6362\u57FA\u672C\u7C7B\u578B\u4F1A\u8C03\u7528<code>valueOf()</code>\uFF0C<code>toString()</code>\u3002\u8FD9\u4E24\u4E2A\u65B9\u6CD5\u53EF\u91CD\u5199\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> number <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> _number <span class="token operator">=</span> number<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>_number<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> _number<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="\u7C7B\u578B\u5224\u65AD" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u5224\u65AD" aria-hidden="true">#</a> \u7C7B\u578B\u5224\u65AD</h2><p>\u51C6\u786E\u9AD8\u6548\u7684\u5224\u65AD\u53D8\u91CF\u7684\u7C7B\u578B\u5F88\u6709\u5FC5\u8981~~~</p><h3 id="typeof" tabindex="-1"><a class="header-anchor" href="#typeof" aria-hidden="true">#</a> Typeof</h3><p><code>typeof</code> \u80FD\u6B63\u786E\u663E\u793A\u51FA<code>\u57FA\u672C\u7C7B\u578B</code>\u7684\u7C7B\u578B\uFF0C\u8FD4\u56DE\u5BF9\u5E94\u7C7B\u578B\u7684\u5B57\u7B26\u4E32,\u5176\u4E2D<code>null</code>\u6BD4\u8F83\u7279\u6027\uFF0C<code>typeof null</code>\u4F1A\u653E\u56DE\u5B57\u7B26\u4E32 <code>object</code>\uFF0C\u8FD9\u7B97\u662F\u4E00\u4E2A bug\uFF0C\u548C\u6700\u521D js \u7684\u8BBE\u8BA1\u6709\u5173\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//number</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//string;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//boolean;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//symbol;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//undefined;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//object;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u5F53\u53F3\u64CD\u4F5C\u7B26\u4E3A\u5BF9\u8C61\u7C7B\u578B\u65F6\uFF0C\u65E0\u8BBA\u5176\u53D8\u91CF\u662F\u4EC0\u4E48\uFF0C<code>typeof</code>\u90FD\u4F1A\u663E\u793A\u4E3A<code>object</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//object;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//object;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u7EFC\u4E0A\uFF1A<code>typeof</code>\u80FD\u7CBE\u786E\u533A\u5206\u9664\u4E86\u57FA\u672C\u7C7B\u578B\u4E2D\u7684<code>null</code>\u90E8\u5206\uFF0C\u5BF9\u4E8E\u5BF9\u8C61\u548C<code>null</code>\u65E0\u6CD5\u7CBE\u786E\u533A\u5206\u3002</p><h3 id="instanceof" tabindex="-1"><a class="header-anchor" href="#instanceof" aria-hidden="true">#</a> Instanceof</h3><p><code>instanceof</code>\u7528\u4E8E\u68C0\u6D4B\u6784\u9020\u51FD\u6570\u7684 <code>prototype</code> \u5C5E\u6027\u662F\u5426\u51FA\u73B0\u5728\u67D0\u4E2A\u5B9E\u4F8B\u5BF9\u8C61\u7684\u539F\u578B\u94FE\u4E0A\u3002\u4E5F\u5C31\u662F\u68C0\u6D4B\u4E00\u4E2A\u5BF9\u8C61\u662F\u4E0D\u662F\u8FD9\u4E2A\u7C7B\u6240<code>new</code>\u51FA\u6765\u7684\uFF0C\u5728 js \u91CC\u9762\u5C31\u662F\u770B\u5BF9\u8C61\u7684<code>__proto__</code>\u94FE\u6761\u4E0A\u6709\u6CA1\u6709\u5BF9\u5E94\u7C7B\u7684<code>prototype</code>\u3002</p><p>\u8BE5\u65B9\u6CD5\u5185\u90E8\u901A\u8FC7\u4F7F\u7528<code>prototype</code>\u6765\u8FDB\u884C\u68C0\u6D4B\uFF0C<code>prototype</code>\u662F\u53EF\u4EE5\u8BA4\u4E3A\u4FEE\u6539\u7684\uFF0C\u5982\u679C\u4FEE\u6539\u4E86<code>prototype</code>\uFF0C\u8BE5\u65B9\u6CD5\u5219\u4F1A\u8FD4\u56DE<code>false</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b <span class="token keyword">instanceof</span> <span class="token class-name">Object</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[[Prototype]]: Object</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u56E0\u4E3A array.prototype \u7EE7\u627F\u81EA object.prototype</p></div><p>\u6839\u636E\u5176\u539F\u7406\u53EF\u624B\u5199\u4E00\u4E2A<code>instanceof</code>\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">myInstanceof</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">object<span class="token punctuation">,</span> constructor</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> prototype <span class="token operator">=</span> constructor<span class="token punctuation">.</span>prototype<span class="token punctuation">;</span>
  object <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>object <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>object <span class="token operator">===</span> prototype<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    object <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="\u5176\u4ED6" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a> \u5176\u4ED6</h3><p>\u5BF9\u4E8E\u5BF9\u8C61\u7C7B\u578B\u7684\u5224\u65AD\u76EE\u524D\u6700\u597D\u7684\u529E\u6CD5\u662F\uFF1A<code>Object.prototype.toString.call()</code>,\u540C\u65F6\u4E5F\u80FD\u5224\u65AD\u57FA\u672C\u7C7B\u578B\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[object Number]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[object Array]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[object Object]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^1</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[object RegExp]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>es6 \u65B0\u589E\u6570\u7EC4\u5224\u65AD<code>Array.isArray()</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="number" tabindex="-1"><a class="header-anchor" href="#number" aria-hidden="true">#</a> Number</h2><p>JavaScript \u7684\u6570\u5B57\u7C7B\u578B\u662F\u6D6E\u70B9\u7C7B\u578B\u3002\u5E76\u4E14\u6D6E\u70B9\u7C7B\u578B\u57FA\u4E8E IEEE 754 \u6807\u51C6\u5B9E\u73B0\uFF0864 \u4F4D\uFF09\u3002\u7B26\u53F7\u4F4D\u5360 1 \u4F4D\uFF0C\u6307\u6570\u4F4D\u5360 11 \u4F4D\uFF0C\u6709\u6548\u6570\u5B57\u4F4D\u5360 52 \u4F4D\u3002\u53D6\u503C\u8303\u56F4<code>[-2^53-1, 2^53-1]</code></p><p><code>console.log(0.1 + 0.2 === 0.3);//false</code>,\u539F\u56E0\u662F\u518D\u8FDB\u884C<code>+</code>\u6CD5\u65F6\u4F1A\u5427\u4E24\u8005\u8F6C\u6362\u4E3A\u4E8C\u8FDB\u5236\u6765\u8FDB\u884C\u8FD0\u7B97\uFF0C\u622A\u65AD\u540E\u5F97\u4E8C\u8FDB\u5236\u518D\u8F6C\u6362\u4E3A\u5341\u8FDB\u5236\u5C0F\u6570\u4F4D\u6709\u4F59\u5BFC\u81F4\u5224\u65AD\u4E3A<code>false</code>\u3002\u53EF\u901A\u8FC7\u6307\u5B9A\u5C0F\u6570\u540E\u6709\u6548\u4F4D\u6570\u89E3\u51B3\u3002</p><p>NaN \u5C5E\u6027\u7528\u4E8E\u6307\u793A\u67D0\u4E2A\u503C\u4E0D\u662F\u6570\u5B57\u3002\u5E76\u4E14 NaN \u4E0D\u7B49\u4E8E\u81EA\u8EAB\u3002\u53EF\u4F7F\u7528<code>isNaN()</code>\u6765\u5224\u65AD\u4E00\u4E2A\u503C\u662F\u5426\u662F<code>NaN</code>\u3002</p><p>ES2020 \u5F15\u5165\u4E86\u4E00\u79CD\u65B0\u7684\u6570\u636E\u7C7B\u578B<code>bigInt</code>,\u89E3\u51B3\u7CBE\u5EA6\u548C\u5927\u6570\u636E\u8FD0\u7B97\u3002</p><h2 id="\u4F5C\u7528\u57DF" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u7528\u57DF" aria-hidden="true">#</a> \u4F5C\u7528\u57DF</h2><p>\u5728 js \u4E2D\u4F5C\u7528\u57DF\u5206\u4E3A: \u5168\u5C40\u4F5C\u7528\u57DF\uFF0C\u51FD\u6570\u4F5C\u7528\u57DF\uFF0C\u5757\u7EA7\u4F5C\u7528\u57DF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>let</code>\u5F62\u6210\u7684<code>\u5757\u7EA7\u4F5C\u7528\u57DF</code>\u53EF\u89E3\u51B3\u4EE5\u4E0B\u7ECF\u5178\u95EE\u9898\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token comment">//10\u4E2A10</span>

<span class="token comment">//\u73B0\u5728\u4F7F\u7528let,\u5F62\u6210\u4F5C\u7528\u57DF\u7ED1\u5B9Ai\u7684\u503C</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token comment">//0 1 2 3 4 5 6 7 8 9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="\u6D45\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6D45\u62F7\u8D1D" aria-hidden="true">#</a> \u6D45\u62F7\u8D1D</h2><p>\u5BF9\u4E8E<code>\u57FA\u672C\u7C7B\u578B</code>\uFF0C\u8D4B\u503C\u64CD\u4F5C\u4F1A\u91CD\u65B0\u5F00\u8F9F\u7A7A\u95F4\uFF0C\u5E76\u4E14\u8FDB\u884C\u503C\u5F97\u590D\u5236\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span>
a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u5BF9\u4E8E<code>\u5F15\u7528\u7C7B\u578B</code>,\u53D8\u91CF\u50A8\u5B58\u5F97\u662F\u5BF9\u8C61\u7684<code>\u6307\u9488</code>\uFF0C\u56E0\u6B64\u8D4B\u503C\u64CD\u4F5C\u4F20\u9012\u7684\u662F<code>\u6307\u9488</code>\u5730\u5740\uFF0C\u4FEE\u6539\u4E00\u4E2A\u53D8\u91CF\uFF0C\u5F71\u54CD\u6240\u6709\u6307\u5411\u8FD9\u4E2A\u5BF9\u8C61\u7684\u53D8\u91CF\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> obj<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b <span class="token operator">===</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//true\uFF0C\u4E0D\u662F\u503C\u76F8\u7B49\uFF0C\u662F\u5730\u5740\u76F8\u7B49</span>
b<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u62F7\u8D1D\u5BF9\u8C61\u53EF\u7528\u65B9\u6CD5<code>Object.assign();</code>,\u5C55\u5F00\u8FD0\u7B97\u7B26<code>...</code>\u3002\u6570\u7EC4\u7684<code>Array.from()</code>\u3002</p><h3 id="object-assign" tabindex="-1"><a class="header-anchor" href="#object-assign" aria-hidden="true">#</a> Object.assign()</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj <span class="token operator">===</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//fasle</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u5C55\u5F00\u8FD0\u7B97\u7B26" tabindex="-1"><a class="header-anchor" href="#\u5C55\u5F00\u8FD0\u7B97\u7B26" aria-hidden="true">#</a> \u5C55\u5F00\u8FD0\u7B97\u7B26</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>obj <span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj <span class="token operator">===</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//fasle</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="array-from" tabindex="-1"><a class="header-anchor" href="#array-from" aria-hidden="true">#</a> Array.from()</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[100, 0, 1, 2]</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token operator">===</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u4E0D\u8FC7\u8FD9\u79CD\u62F7\u8D1D\u53EA\u80FD\u89E3\u51B3\u4E00\u5C42\u5BF9\u8C61\u590D\u5236\u95EE\u9898\u3002\u5728\u503C\u662F<code>\u5F15\u7528\u7C7B\u578B</code>\u65F6\u65E0\u6CD5\u6DF1\u5C42\u6B21\u62F7\u8D1D\uFF0C\u4F9D\u65E7\u5B58\u5728\u5F15\u7528\u95EE\u9898\u3002\u4E0D\u80FD\u89E3\u51B3\u5FAA\u73AF\u5F15\u7528\u7684\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> b <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="\u6DF1\u62F7\u8D1D" tabindex="-1"><a class="header-anchor" href="#\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a> \u6DF1\u62F7\u8D1D</h2><p>\u89E3\u51B3\u5BF9\u8C61\u91CC\u9762\u4F9D\u65E7\u5B58\u5728\u5BF9\u8C61\u7684\u5F15\u7528\u95EE\u9898\u3002</p><h3 id="json" tabindex="-1"><a class="header-anchor" href="#json" aria-hidden="true">#</a> <code>JSON</code></h3><p>\u53EF\u4F7F\u7528<code>JSON</code>\u6765\u89E3\u51B3\u4E00\u90E8\u5206\u95EE\u9898\u3002\u4F7F\u7528<code>JSON.stringify()</code>\u628A\u5BF9\u8C61\u8F6C\u5316\u4E3A\u5B57\u7B26\u4E32,\u518D\u4F7F\u7528<code>JSON.parse()</code>\u628A\u5B57\u7B26\u4E32\u8F6C\u6362\u4E3A\u5BF9\u8C61\uFF0C\u4F1A\u91CD\u65B0\u5F00\u8F9F\u7A7A\u95F4\u5E76\u8D4B\u503C\uFF0C\u5B8C\u6210\u6DF1\u62F7\u8D1D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">.</span>b<span class="token punctuation">.</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>\u4E0D\u8FC7\u8BE5\u65B9\u6CD5\u4F1A\u6709\u4EE5\u4E0B\u5C40\u9650\u6027\uFF1A</p><ul><li>\u5FFD\u7565<code>undefined</code></li><li>\u5FFD\u7565<code>symbol</code></li><li>\u51FD\u6570\u65E0\u6CD5\u62F7\u8D1D</li><li>\u4E0D\u80FD\u89E3\u51B3\u5FAA\u73AF\u5F15\u7528\u7684\u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//{d: 0}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="\u81EA\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49</h3><p>\u81EA\u5B9A\u4E49\u4E00\u4E2A\u7B80\u6613\u6DF1\u62F7\u8D1D\u51FD\u6570\uFF0C\u9012\u5F52\u89E3\u51B3\u5BF9\u8C61\u5F15\u7528\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">deepCopy</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;[object Object]&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token function">deepCopy</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u4F7F\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token literal-property property">e</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> obj1 <span class="token operator">=</span> <span class="token function">deepCopy</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>e<span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>
obj1<span class="token punctuation">.</span><span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>e<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> \u64CD\u4F5C\u7B26</h2><p>es6 \u65B0\u589E\u7684<code>?.</code> \u94FE\u5224\u65AD\u8FD0\u7B97\u7B26\u8BA9\u5224\u65AD\u662F\u5426\u5B58\u5728\u66F4\u52A0\u7B80\u5355</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> name <span class="token operator">=</span> join<span class="token operator">?.</span>name<span class="token punctuation">;</span>
<span class="token keyword">const</span> eat <span class="token operator">=</span> join<span class="token operator">?.</span><span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u51FD\u6570\u4E5F\u53EF\u4EE5\u7528</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>es6 \u65B0\u589E\u7684<code>?? </code>NUll \u5224\u65AD\u8FD0\u7B97\u7B26\uFF0C\u53EA\u9488\u5BF9<code>null</code>\u548C<code>undefined</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token function">getAn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string">&quot;cat&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,81);function t(e,o){return p}var l=n(a,[["render",t],["__file","type.html.vue"]]);export{l as default};
