import{_ as i,c as s,o as l,a4 as a}from"./chunks/framework.DhooLXd5.js";const c=JSON.parse('{"title":"毕设","description":"","frontmatter":{},"headers":[],"relativePath":"project/one.md","filePath":"project/one.md","lastUpdated":1712132731000}'),e={name:"project/one.md"},n=a(`<h1 id="毕设" tabindex="-1">毕设 <a class="header-anchor" href="#毕设" aria-label="Permalink to &quot;毕设&quot;">​</a></h1><p>毕设主题是 App。也包含后台管理系统，产品介绍页面。</p><h2 id="app" tabindex="-1">App <a class="header-anchor" href="#app" aria-label="Permalink to &quot;App&quot;">​</a></h2><p>采用 uniapp 进行开发，语法和 html 接近，减少开发成本。先按照 App 进行一个页面分类。</p><h3 id="home" tabindex="-1">Home <a class="header-anchor" href="#home" aria-label="Permalink to &quot;Home&quot;">​</a></h3><p>Home 页是进入 App 的主体页面。从上向下，分类可为：</p><ul><li>右侧为 User 头像，左侧主体为搜索框 <ul><li>登录情况下点击头像可进入个人用户界面，否则进入登录界面，点击搜索框进入搜索页面</li></ul></li><li>下面一列为主要功能集群，四个按钮，分为<code>跑步</code>，<code>监测</code>，<code>记录</code>，<code>视频</code><ul><li>跑步 : 跳转 Run 页面进行跑步</li><li>记录 : 历史运动数据展示</li><li>监测 : 对数据进行分析</li><li>视频 : 运动视频</li></ul></li><li>今日看点，list 列表，展示一些运动类的新闻 <ul><li>title ，image，content，adn time</li></ul></li></ul><p>list 部分需要滚动条，自适应高度</p><h3 id="圈子" tabindex="-1">圈子 <a class="header-anchor" href="#圈子" aria-label="Permalink to &quot;圈子&quot;">​</a></h3><p>这个用户交流页面。主体为 list 列表展示发言。提供一个可以发布的按钮。</p><ul><li>list 列表包含 title，content，time，image，userName，more action。</li><li>点击按钮进行言论发布</li></ul><h3 id="run" tabindex="-1">Run <a class="header-anchor" href="#run" aria-label="Permalink to &quot;Run&quot;">​</a></h3><p>展示当前地图和记录用户跑步轨迹进行储存。</p><h3 id="user" tabindex="-1">User <a class="header-anchor" href="#user" aria-label="Permalink to &quot;User&quot;">​</a></h3><p>用户页面，分为两个状态，登录和游客状态。</p><p><strong>游客状态</strong></p><p>当前状态下，用户只能使用简单功能，核心功能只能登录后才能使用。</p><p>页面上，从上而下：</p><ul><li>扫码功能和消息提示功能，</li><li>用户头像和能使用的登录方式，协议信息等提升。 <ul><li>手机号注册和账号密码注册等。</li><li>提供三方登录</li></ul></li><li>用户身体数据存储，当天跑步数据记录</li><li>收藏 list 等</li></ul><p><strong>登录状态</strong></p><ul><li>展示头像，点击可进入用户详情页面。</li><li>推送信息，提供扫码功能。</li><li>输入数据</li><li>dispaly 信息</li></ul><p>用户详情页面</p><ul><li>缓存的设置</li><li>数据的可视化展示</li><li>修改密码</li><li>系统设置功能</li></ul><p>文章和其他用户的发言，如果当前用户评论了其中一条数据，如果其他用户评论这条这个用户评论的发言，应该通知用户。</p><p>用户关注了某个其他用户的时候，被关注用户有了新的发言的时候，应该通知到这个用户。</p><h2 id="后台管理页面" tabindex="-1">后台管理页面 <a class="header-anchor" href="#后台管理页面" aria-label="Permalink to &quot;后台管理页面&quot;">​</a></h2><p>使用 React 技术来进行前端开发。</p><h3 id="登录" tabindex="-1">登录 <a class="header-anchor" href="#登录" aria-label="Permalink to &quot;登录&quot;">​</a></h3><p>密码使用<code>sha256</code>进行加密，避免明文传输。返回一个 token 来进行身份验证。</p><h3 id="home-1" tabindex="-1">home <a class="header-anchor" href="#home-1" aria-label="Permalink to &quot;home&quot;">​</a></h3><p>登录成功后的首页主要用来展示数据。按照从上往下梳理：</p><ul><li>数据统计，总访问量，app 下载量，活跃度等</li><li>app 下载统计，按照时间流程</li><li>app 数据（后期考虑去掉）</li></ul><p>首页的作用是，提供数据的可视化展示。</p><h3 id="app-1" tabindex="-1">app <a class="header-anchor" href="#app-1" aria-label="Permalink to &quot;app&quot;">​</a></h3><p>app_basic 页面主要展示 app 相关数据，和 app 本身相关。</p><ul><li>app 基础信息，如发布时间，版本号，等</li><li>app 下载量，用户打分情况</li><li>app 搜索热词</li><li>app 迭代情况</li><li>用户反馈情况 （拆分为反馈和文章热词）</li></ul><p>app_artic</p><ul><li>artic 文章列表，可添加视频。</li><li>提供搜索情况，时间等搜索</li></ul><p>app_tlak</p><ul><li>app 用户发言数据统计，可发布官方情况，是否顶置等。</li><li>提供搜索情况，按类型，时间等搜索</li></ul><h3 id="user-1" tabindex="-1">user <a class="header-anchor" href="#user-1" aria-label="Permalink to &quot;user&quot;">​</a></h3><p>User 用户数据统计</p><ul><li>app 注册用户 list 列表展示，可对数据进行操作，封禁等</li><li>具体页面包含基础的用户情况，详情页面展示基础和 run 数据</li></ul><h3 id="data" tabindex="-1">data <a class="header-anchor" href="#data" aria-label="Permalink to &quot;data&quot;">​</a></h3><p>所有用户跑步数据和其他数据</p><ul><li>判断用户健康的模板参数和已经存在的模板参数</li><li>对所有用户数据的健康度的判断</li><li>使用 app 的年龄段的分布</li><li>run 数据的 list</li><li>run 数据页面包含 run 数据的基础信息和轨迹情况</li></ul><h3 id="set" tabindex="-1">set <a class="header-anchor" href="#set" aria-label="Permalink to &quot;set&quot;">​</a></h3><p>admin，管理员页面</p><ul><li>Set 系统设置页面</li><li>当前管理员的基础信息</li><li>管理员列表</li><li>添加，删除管理员</li></ul><p><strong>未完成</strong>：用户详情下的 run 数据具体展示页面，用户反馈下的具体内容，视频文章-&gt; 单独文章，视频作为文章的附属内容。添加文章的操作， 用户发言列表的具体展示。</p><h2 id="web-展示页面" tabindex="-1">web 展示页面 <a class="header-anchor" href="#web-展示页面" aria-label="Permalink to &quot;web 展示页面&quot;">​</a></h2><p>采用 vue 来进行前端页面的构建</p><p>主要功能</p><ul><li>展示项目</li><li>提供下载功能</li><li>展示下载数据量</li><li>提供联系方式</li></ul><h2 id="apis" tabindex="-1">Apis <a class="header-anchor" href="#apis" aria-label="Permalink to &quot;Apis&quot;">​</a></h2><p>设计 api</p><h3 id="pc" tabindex="-1">pc <a class="header-anchor" href="#pc" aria-label="Permalink to &quot;pc&quot;">​</a></h3><ul><li>home <ul><li>loginApi：登录 api，返回 tooken</li><li>getAlltotal：获取平台数据集合</li><li>getAppUsers：获取下载趋势数据</li></ul></li><li>admin <ul><li>getAdminList：获取 admin 集合</li><li>getAdminInformation：通过 id 获取单个 admin 信息</li><li>deleteAdmin：删除 admin</li><li>creatAdmin：创建 admin</li></ul></li><li>app <ul><li>getAppInformation：获取 app 基础信息情况</li><li>getAppHostWords：获取 app 搜索热词</li><li>getAppVersion: 获取 app 的版本信息</li><li>feedBackList：获取反馈集合</li><li>feedBackInformation：获取具体反馈信息</li><li>getAllArtic：获取 app 所有文章</li><li>deleteArtic：删除某个文章</li><li>addArtic：新增文章</li><li>getArticInformation：获取某个具体文章信息</li><li>getAllForumList：获取所有论坛列表</li><li>addForum：增加一条论坛数据（非 user，仅为 admin）</li><li>getForumInformation：获取论坛中具体的一条数据</li><li>deleteForum：删除数据</li></ul></li><li>data <ul><li>bodyList：已创建的基础数据标准</li><li>addRule：增加规则</li><li>getPeopleAge：获取用户年龄分布</li><li>getHealthy：获取用户健康情况</li><li>getRunList：获取用户的运动情况</li></ul></li><li>user <ul><li>getUserInformation：获取某个用户具体信息</li><li>getUserList：获取用户 list</li><li>disableUser：禁用用户</li><li>userLiked: 用户关注情况</li></ul></li></ul><h3 id="app-2" tabindex="-1">app <a class="header-anchor" href="#app-2" aria-label="Permalink to &quot;app&quot;">​</a></h3><ul><li>home <ul><li>getUserInformation:首页用户信息，预加载，只显示头像</li><li>search :通过用户的输入来检索信息</li><li>getAppHostWords：获取搜索热词</li><li>getTodayArtic:获取当天热文章</li><li>getAllArtic:获取所有的文章</li><li>getArticByid:获取当个文章信息</li></ul></li><li>forum <ul><li>getAllForums：获取所有的用户发言列表</li><li>userLikeForum：用户点赞某个发言</li><li>userCommentForum：用户评论某个发言</li><li>userCollectForum：用户收藏某个发言</li><li>creatForum：用户发言</li><li>getLikesById:获取当前用户关注的 user</li><li>getCommentsById:获取当前发言被评论的列表</li></ul></li><li>run <ul><li>endRun:结束跑步发送数据</li><li>getUserRunsList：获取用户历史跑步数据</li><li>getRunsByUserId:通过 userid 来获取用户下的所有 run 数据</li></ul></li><li>user <ul><li>loginApi：登录</li><li>registerApi：注册</li><li>getUserInformation：获取用户信息</li><li>updatedUserInformationApi:更改用户信息</li><li>changePasswordApi:修改密码</li><li>getRunInformation：获取用户跑步记录</li><li>searchCode：二维码</li><li>getHistory：获取历史数据</li><li>userBody:用户身体数据情况</li><li>userLikes：用户关注列表</li></ul></li></ul><h2 id="数据库" tabindex="-1">数据库 <a class="header-anchor" href="#数据库" aria-label="Permalink to &quot;数据库&quot;">​</a></h2><h3 id="表" tabindex="-1">表 <a class="header-anchor" href="#表" aria-label="Permalink to &quot;表&quot;">​</a></h3><p>管理员表，储存 pc 端管理员的信息情况</p><ul><li><p>admin true</p><ul><li>uuid</li><li>userName</li><li>password</li></ul></li><li><p>admin_information</p><ul><li>adminId</li><li>token</li><li>lastLoginTime</li><li>imgUrl</li><li>creatTime</li></ul></li></ul><p>pp 表主要包含 app 的信息情况，以及平台提供的服务和信息。文章，搜索，等。会和 user 模块进行交互</p><ul><li>app true <ul><li>version</li><li>appName</li></ul></li><li>app_version <ul><li>uuid</li><li>version</li><li>content</li><li>creatTime</li></ul></li><li>app_hosts true <ul><li>uuid</li><li>content</li><li>link</li><li>numbers</li></ul></li><li>app_artic true <ul><li>uuid</li><li>content</li><li>creatTime</li><li>adminName</li><li>lastUpdateTime</li></ul></li><li>app_artuc_infroamtion true <ul><li>uuid</li><li>articId</li><li>likes</li></ul></li><li>app_toady_artic true <ul><li>uuid</li><li>content</li></ul></li><li>app_body_data true <ul><li>uuid</li><li>creatTime</li><li>auther</li><li>data</li></ul></li></ul><p>run 表，记录跑步进行情况，保存所有跑步记录</p><ul><li>run true <ul><li>uuid</li><li>userId</li><li>data //经纬度数据</li><li>dataCenter</li><li>creatTime</li><li>endTime</li><li>minSpeed</li><li>maxSpeed</li><li>speed</li><li>numners</li><li>result</li></ul></li></ul><p>speech 表</p><ul><li>speech true <ul><li>uuid</li><li>creatTime</li><li>lookPeples</li><li>content</li><li>icos</li><li>likes</li><li>commects</li><li>collects</li></ul></li></ul><p>user 表，包含用户账号密码，第三方登录等情况，</p><ul><li><p>user</p><ul><li>uuid</li><li>userName</li><li>password</li><li>oherLogins</li></ul></li><li><p>qq</p><ul><li>uuid</li><li>userId</li><li>qqId</li></ul></li><li><p>wx</p><ul><li>uuid</li><li>userId</li><li>wxId</li></ul></li></ul><p>likedUsers</p><ul><li>user_liedad <ul><li>uud</li><li>userId</li></ul></li></ul><p>user_body 用户身体数据</p><ul><li>user_body <ul><li>uuid</li><li>data</li></ul></li></ul><p>user_liked 用户关注列表</p><ul><li>user_liked <ul><li>uuid</li><li>userId</li><li>likedUserId</li><li>creatTime</li></ul></li></ul><p>user_information 基础的信息情况，</p><ul><li>user_information <ul><li>imgUrl</li><li>lastLoginTime</li><li>lastLoginIp</li><li>creatUserTime</li><li>liksUsers</li></ul></li></ul><p>user_speech 用户的发言情况，和 run、app 模块交互</p><ul><li>user_speech <ul><li>uuid</li><li>userId</li><li>speechId</li></ul></li></ul><p>user_history 用户的历史情况，看过什么文章等等时间</p><ul><li><p>user_history</p><ul><li>uuid</li><li>userId</li><li>time</li><li>content</li></ul></li></ul><p>user_runs 用户的运动情况</p><ul><li><p>user_runs</p><ul><li>uuid</li><li>userId</li><li>runId // array</li></ul></li></ul><p>user_comment 用户的评论 list</p><ul><li><p>user_comment</p><ul><li>uuid</li><li>userid</li><li>articId</li></ul></li></ul><p>user_collect 收藏</p><ul><li>user_collect <ul><li>uuid</li><li>articId</li><li>userId</li></ul></li></ul><h2 id="地图轨迹" tabindex="-1">地图轨迹 <a class="header-anchor" href="#地图轨迹" aria-label="Permalink to &quot;地图轨迹&quot;">​</a></h2><h3 id="pc-上用户展示用户的跑步轨迹。" tabindex="-1">pc 上用户展示用户的跑步轨迹。 <a class="header-anchor" href="#pc-上用户展示用户的跑步轨迹。" aria-label="Permalink to &quot;pc 上用户展示用户的跑步轨迹。&quot;">​</a></h3><p>使用高德 api 进行开发，</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> polyline</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Polyline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  //绘制轨迹</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  map: map,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  path: lineArr, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//经纬度列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  showDir: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  strokeColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#28F&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  strokeWeight: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFitView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//缩放视野级别</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 使用定时器进行绘制</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lineArr.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path[lineArr.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//更改经纬度数组</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> polyline </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Polyline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //重新绘制</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    map: map,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    path: lineArr,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    showDir: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    strokeColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#28F&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    strokeWeight: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setFitView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="app-绘制和实时记录" tabindex="-1">app 绘制和实时记录 <a class="header-anchor" href="#app-绘制和实时记录" aria-label="Permalink to &quot;app 绘制和实时记录&quot;">​</a></h3><p>实时获取地理位置：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wgs84&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;当前位置的经度：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.longitude);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;当前位置的纬度：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.latitude);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><p>实时绘制，map 组件的一个属性：<code>polyline</code>，经纬度数组。和 pc 端同理，定时改变改属性并且进行渲染即可。</p><h2 id="app-端图表" tabindex="-1">app 端图表 <a class="header-anchor" href="#app-端图表" aria-label="Permalink to &quot;app 端图表&quot;">​</a></h2><p>app 端采用 renderjs 来进行图表构建，主要用于展示跑步数据，频率，身体数据等的可视化展示。</p><p>app 网络请求 promise 化封装，api 封装。</p><p>第三方登录，注册开发者，手机号登录（腾讯云开发）</p><h2 id="储存" tabindex="-1">储存 <a class="header-anchor" href="#储存" aria-label="Permalink to &quot;储存&quot;">​</a></h2><p>pc 端储存在 localstorage token app 储存在手机，进入 app 的时候需要进行本地数据读取。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setStorage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  key: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;storage_key&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  data: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>相机扫描（考虑中）</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scanCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;条码类型：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.scanType);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;条码内容：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.result);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="springboot" tabindex="-1">springBoot <a class="header-anchor" href="#springboot" aria-label="Permalink to &quot;springBoot&quot;">​</a></h2><p>mysql,sqagger-ui,</p><h3 id="table-分页" tabindex="-1">table 分页 <a class="header-anchor" href="#table-分页" aria-label="Permalink to &quot;table 分页&quot;">​</a></h3><p>后端接口参数</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> listParameter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pageNo: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  pageSize: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h3 id="controller" tabindex="-1">controller <a class="header-anchor" href="#controller" aria-label="Permalink to &quot;controller&quot;">​</a></h3><h3 id="service" tabindex="-1">service <a class="header-anchor" href="#service" aria-label="Permalink to &quot;service&quot;">​</a></h3><h3 id="dao" tabindex="-1">dao <a class="header-anchor" href="#dao" aria-label="Permalink to &quot;dao&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">提示</p><p>未完待续</p></div>`,116),p=[n];function t(h,r,k,d,o,u){return l(),s("div",null,p)}const g=i(e,[["render",t]]);export{c as __pageData,g as default};
