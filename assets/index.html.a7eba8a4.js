import{_ as n,b as s}from"./app.6ca2237f.js";var a="/assets/palindromeLongest.4f270939.png";const p={},t=s(`<h1 id="\u5C0F\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u5C0F\u9898\u76EE" aria-hidden="true">#</a> \u5C0F\u9898\u76EE</h1><p>\u6536\u96C6\u4E00\u4E9B\u5C0F\u9898\u76EE\u3002</p><h2 id="\u6C34\u4ED9\u82B1\u6570" tabindex="-1"><a class="header-anchor" href="#\u6C34\u4ED9\u82B1\u6570" aria-hidden="true">#</a> \u6C34\u4ED9\u82B1\u6570</h2><p>\u4EC0\u4E48\u662F\u6C34\u4ED9\u82B1\u6570\uFF1A\u6C34\u4ED9\u82B1\u6570\u662F\u6307\u4E00\u4E2A 3 \u4F4D\u6570\uFF0C\u5B83\u7684\u6BCF\u4E2A\u4F4D\u4E0A\u7684\u6570\u5B57\u7684 3 \u6B21\u5E42\u4E4B\u548C\u7B49\u4E8E\u5B83\u672C\u8EAB\u3002\u4F8B\u5982\uFF1A1^3 + 5^3+ 3^3 = 153\u3002</p><p><strong>The problem</strong>\uFF1A\u6C42\u51FA 100-1000 \u5185\u7684\u6240\u6709\u6C34\u4ED9\u82B1\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">narcissisticNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> bit<span class="token punctuation">,</span> ten<span class="token punctuation">,</span> hundred<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    bit <span class="token operator">=</span> i <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
    ten <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">-</span> bit<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">//js/\u8FD0\u7B97\u6709\u4F59</span>
    hundred <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> ten <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">-</span> bit<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hundred <span class="token operator">*</span> hundred <span class="token operator">*</span> hundred <span class="token operator">+</span> ten <span class="token operator">*</span> ten <span class="token operator">*</span> ten <span class="token operator">+</span> bit <span class="token operator">*</span> bit <span class="token operator">*</span> bit <span class="token operator">===</span> i<span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">narcissisticNumber</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 153 370 371 407</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="\u6768\u8F89\u4E09\u89D2" tabindex="-1"><a class="header-anchor" href="#\u6768\u8F89\u4E09\u89D2" aria-hidden="true">#</a> \u6768\u8F89\u4E09\u89D2</h2><p>\u7ECF\u5178\u95EE\u9898\uFF0C\u76F4\u63A5\u8BF4\u91CD\u70B9\uFF1A\u4ECE\u7B2C\u4E8C\u884C\u5F00\u59CB\uFF0C\u975E\u9996\u5217\u7684\u503C\u662F\u5F53\u524D\u5217\u5F97<code>\u4E0A\u4E00\u884C</code>\u548C<code>\u4E0A\u4E00\u884C\u524D\u4E00\u5217</code>\u4E24\u8005\u503C\u5F97\u548C\u3002</p><p><strong>The problem</strong>\uFF1A\u7ED9\u51FA n \u7684\u6768\u8F89\u4E09\u89D2\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">triangle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> i<span class="token punctuation">,</span> j<span class="token punctuation">;</span>
  <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//\u751F\u6210\u57FA\u4E8En\u7684\u4E8C\u7EF4\u6570\u7EC4</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u89C4\u7A0B\u586B\u5145</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      str <span class="token operator">+=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6253\u5370</span>
    str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">triangle</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="\u6590\u6CE2\u62C9\u5951" tabindex="-1"><a class="header-anchor" href="#\u6590\u6CE2\u62C9\u5951" aria-hidden="true">#</a> \u6590\u6CE2\u62C9\u5951</h2><p>\u6590\u6CE2\u90A3\u5951\u6570\u5217\u6307\u7684\u662F\u8FD9\u6837\u4E00\u4E2A\u6570\u5217 :1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89........</p><p><strong>\u91CD\u70B9</strong>:\u8FD9\u4E2A\u6570\u5217\u4ECE\u7B2C 3 \u9879\u5F00\u59CB\uFF0C\u6BCF\u4E00\u9879\u90FD\u7B49\u4E8E\u524D\u4E24\u9879\u4E4B\u548C\u3002</p><p><strong>The problem</strong>\uFF1A\u6C42\u7ED9\u5B9A n \u4E0B\u7684\u6590\u6CE2\u62C9\u5951\u6570\u5217\uFF0C\u6216\u7ED9\u51FA n \u4F4D\u4E0B\u7684\u503C\u3002</p><p>\u9996\u5148\u4F7F\u7528\u9012\u5F52\uFF0C\u4E0B\u65B9\u6CD5\u80FD\u6C42\u51FA n \u4F4D\u4E0B\u7684\u6590\u6CE2\u62C9\u5951\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fib</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token comment">//\u7ED3\u675F\u6761\u4EF6</span>
  <span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">fib</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u89C4\u5219\u5C31\u662F \u901A\u9879\u516C\u5F0F</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fib</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>\u82E5\u8981\u6253\u5370 n \u4F4D\u4E0B\u7684\u6590\u6CE2\u62C9\u5951\u6570\u5217\uFF0C\u52A0\u4E2A\u5FAA\u73AF\u5373\u53EF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">7</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">fib</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>\u9012\u5F52\u4F1A\u5360\u636E\u5927\u91CF\u5185\u5B58\u7A7A\u95F4\uFF0C\u8FD9\u5BF9\u4E8E\u7B97\u6CD5\u4E2D<code>\u7A7A\u95F4\u590D\u6742\u5EA6</code>\u8981\u6C42\u4E0D\u662F\u5F88\u597D\u3002</p><p>\u540C\u65F6\u56DE\u770B\u91CD\u70B9:<strong>\u8FD9\u4E2A\u6570\u5217\u4ECE\u7B2C 3 \u9879\u5F00\u59CB\uFF0C\u6BCF\u4E00\u9879\u90FD\u7B49\u4E8E\u524D\u4E24\u9879\u4E4B\u548C</strong>\u3002\u4E5F\u5C31\u662F\u8BF4\u6BCF\u6B21\u6C42\u7B2C n \u9879\u65F6\u53EA\u9700\u8981\u77E5\u9053<code>n-1</code>\u548C<code>n-2</code>\u9879\u5C31\u884C\u4E86\uFF0C\u800C\u9012\u5F52\u6BCF\u6B21\u90FD\u662F\u4ECE\u7B2C\u4E00\u9879\u5F00\u59CB\u8BA1\u7B97\uFF0C\u6D6A\u8D39\u4E86\u65F6\u95F4\uFF0C\u6240\u4EE5\u53EF\u4EE5\u91C7\u7528\u5FAA\u73AF\u6765\u6C42\u89E3\u3002</p><p>\u4EE5\u4E0B\u51FD\u6570\u80FD\u6253\u5370\u51FA\u7ED9\u5B9A n \u4E0B\u7684\u6570\u5217\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fibF</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> last1 <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span> <span class="token comment">//\u8BB0\u5F55</span>
  <span class="token keyword">let</span> last2 <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> nowNumber <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      nowNumber <span class="token operator">=</span> last2 <span class="token operator">=</span> last1 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      nowNumber <span class="token operator">=</span> last2 <span class="token operator">+</span> last1<span class="token punctuation">;</span>
      last2 <span class="token operator">=</span> last1<span class="token punctuation">;</span>
      last1 <span class="token operator">=</span> nowNumber<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nowNumber<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">fibF</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="\u56DE\u6587\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u56DE\u6587\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u56DE\u6587\u5B57\u7B26\u4E32</h2><p>\u5B9A\u4E49\uFF1A\u56DE\u6587\u5B57\u7B26\u4E32\u662F\u4E00\u4E2A\u6B63\u8BFB\u548C\u53CD\u8BFB\u90FD\u4E00\u6837\u7684\u5B57\u7B26\u4E32\u3002</p><p><strong>\u91CD\u70B9</strong>\uFF1A\u6B63\u8BFB\u548C\u53CD\u8BFB\u90FD\u4E00\u6837\u3002</p><p><strong>The problem</strong>:\u7ED9\u5B9A\u4E00\u4E2A\u8F93\u5165\u5B57\u7B26\u4E32\uFF0C\u5224\u65AD\u662F\u5426\u4E3A\u56DE\u6587\u5B57\u7B26\u4E32</p><p>\u91C7\u7528 for \u5FAA\u73AF\u904D\u5386\u5224\u65AD\uFF0C\u5B57\u7B26\u4E32\u957F\u5EA6\u4E3A\u5076\u6570\u53EA\u9700\u8981\u6BD4\u8F83\u957F\u5EA6\u4E00\u534A\u5373\u53EF\uFF0C\u4E3A\u5947\u6570\u9664\u5F00\u4E2D\u95F4\u5B57\u7B26\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isPalindromeString</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> num <span class="token operator">=</span> str<span class="token punctuation">.</span>length <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">?</span> str<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">0.5</span> <span class="token operator">:</span> str<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">//js\u6CA1\u6709\u6574\u9664\uFF0C\u9700\u8981\u5904\u7406\u4E00\u4E0B</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> str<span class="token punctuation">[</span>str<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&quot;aassaa&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isPalindromeString</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>\u4E5F\u53EF\u4EE5\u91C7\u7528\u53CC\u6307\u9488\u6765\u8FDB\u884C\u5224\u65AD\uFF0C\u5C31\u4E0D\u9700\u8981\u8BA1\u7B97\u4E2D\u95F4\u4F4D\u7F6E\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isPalindromeString</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> low <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> high <span class="token operator">=</span> str<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>low <span class="token operator">&lt;=</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">[</span>low<span class="token punctuation">]</span> <span class="token operator">!==</span> str<span class="token punctuation">[</span>high<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    low<span class="token operator">++</span><span class="token punctuation">;</span>
    high<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&quot;vassav&quot;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isPalindromeString</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u5BF9\u4E8E\u7C7B\u4F3C\u7684\u56DE\u6587\u6570\u4E5F\u662F\u4E00\u6837\u7684\u601D\u8DEF\uFF1A\u524D\u540E\u540C\u65F6\u904D\u5386\u662F\u5426\u76F8\u540C\u3002</p><h3 id="\u6700\u957F\u56DE\u6587\u5B57\u4E32" tabindex="-1"><a class="header-anchor" href="#\u6700\u957F\u56DE\u6587\u5B57\u4E32" aria-hidden="true">#</a> \u6700\u957F\u56DE\u6587\u5B57\u4E32</h3><p>leetcode \u771F\u9898</p><p>\u5206\u6790\uFF1A\u5BF9\u6BD4\u4E8E\u5224\u65AD\u662F\u5426\u56DE\u6587\u5B57\u7B26\u4E32\uFF0C\u6B64\u9898\u662F\u627E\u51FA\u5B57\u7B26\u4E32\u4E2D\u4E3A\u56DE\u6587\u4E32\u4E2D\u957F\u5EA6\u6700\u957F\u5F97\u5B57\u7B26\u4E32\u3002\u96BE\u5EA6\u5728\u4E8E\u8981\u53BB\u627E\u5230\u8F93\u5165\u5B57\u7B26\u4E32\u7684\u5B50\u4E32\uFF0C\u5E76\u4E14\u627E\u5230\u7B26\u5408\u7684\u6700\u5927\u957F\u5EA6\u7684\u5B57\u4E32\u3002</p><p>\u56E0\u4E3A\u9700\u8981\u627E\u51FA\u6700\u957F\u5F97\uFF0C\u6240\u4EE5\u5C31\u4ECE\u5927\u5230\u5C0F\u53BB\u5224\u65AD\uFF0C\u627E\u5230\u5C31 return\uFF0C\u5BF9\u4E8E\u957F\u5EA6\u4E3A n \u5F97\u5B57\u7B26\u4E32\uFF0C\u5B83\u6709(n * (n + 1)) / 2 \u4E2A\u5B50\u7EC4\u5408\u3002\u7D27\u63A5\u5F97\u95EE\u9898\u5C31\u662F\u627E\u51FA\u4ECE\u5927\u5230\u5C0F\u5F97\u5B57\u7B26\u4E32\u3002\u5982\uFF1A<code>abba</code>,\u6309\u4ECE\u5927\u5230\u5C0F\u6709\uFF1A<code>abba</code>,<code>abb</code>,<code>bba</code>,<code>ab</code>,<code>bb</code>,<code>ba</code>,<code>a</code>,<code>b</code>,<code>b</code>,<code>a</code>\u3002</p><p>\u7B2C\u4E00\u79CD\u65B9\u5F0F\uFF0C\u76F4\u63A5\u66B4\u529B\u6C42\u89E3\uFF0C\u7B2C\u4E00\u5C42\u5FAA\u73AF\u610F\u4E3A\u5FAA\u73AF\u5B50\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\uFF0C\u7B2C\u4E8C\u5C42\u4E3A\u627E\u51FA\u5B57\u7B26\u4E32\u957F\u5EA6\u4E3A i \u65F6\u5019\u7684\u6240\u4EE5\u5B50\u5B57\u7B26\u4E32\uFF0C\u6700\u91CC\u9762\u5FAA\u73AF\u6765\u8FDB\u884C\u6BD4\u8F83\u5224\u65AD\u5F53\u524D\u5B57\u7B26\u4E32\u662F\u5426\u7B26\u5408\u56DE\u6587\u7684\u8981\u6C42\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">longestPalindrome</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> isPal <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//i: 0 1 2 ...</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//j: s.length -1  s.length - 2 ...</span>
      <span class="token punctuation">(</span>left <span class="token operator">=</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>right <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">+</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">let</span> str <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//js\u622A\u53D6\u5B57\u7B26\u4E32\u7684\u65B9\u6CD5\uFF0C\u5DE6\u95ED\u53F3\u5F00\uFF0Cright+1;</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">!==</span> s<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          isPal <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        isPal <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        left<span class="token operator">++</span><span class="token punctuation">;</span>
        right<span class="token operator">--</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>isPal<span class="token punctuation">)</span> <span class="token keyword">return</span> str<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><p>\u8FD9\u79CD\u65B9\u6CD5\uFF0C\u7A7A\u95F4\u590D\u6742\u5EA6\u4E3A<code>O(n*n*n)</code>,\u590D\u6742\u5EA6\u592A\u9AD8\u3002</p><p><strong>\u4F18\u5316</strong>\uFF1A\u53EF\u5728\u5224\u65AD\u662F\u5426\u4E3A\u56DE\u6587\u548C\u83B7\u53D6\u5B50\u7EC4\u5408\u5F97\u65F6\u5019\u540C\u65F6\u8FDB\u884C\uFF0C\u51CF\u5C11\u4E00\u5C42\u5FAA\u73AF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">longestPalindrome</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> isPal <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> number <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//\u7EF4\u62A4\u4E00\u4E2A\u5224\u65AD\u6570\u7EC4</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> number<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> number<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u589E\u52A0\u5FAA\u73AF\u6B21\u65700; 0 1; ...</span>
      number<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>number<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
      i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      j<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>number<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&gt;=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u8D85\u51FA\u8F93\u5165\u5B57\u7B26\u6700\u5927\u957F\u5EA6\u5C31\u7ED3\u675F\u5FAA\u73AF</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    left <span class="token operator">=</span> i<span class="token punctuation">;</span>
    right <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> j <span class="token operator">+</span> i<span class="token punctuation">;</span>
    <span class="token keyword">let</span> str <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u5224\u65AD\u5F53\u524D\u5B57\u7B26\u4E32</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">!==</span> s<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        isPal <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      isPal <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      left<span class="token operator">++</span><span class="token punctuation">;</span>
      right<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isPal<span class="token punctuation">)</span> <span class="token keyword">return</span> str<span class="token punctuation">;</span> <span class="token comment">//\u4ECE\u5927\u5230\u5C0F\u5224\u65AD\uFF0C\u627E\u5230\u5C31return</span>
    i<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>\u5916\u5C42\u5FAA\u73AF\u63A7\u5236\u6B21\u6570\uFF0C\u5185\u5C42\u5FAA\u73AF\u6765\u8FDB\u884C\u6BD4\u8F83\u3002\u5916\u5C42\u5FAA\u73AF\u7684 i \u5C31\u662F\u5B50\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u56FA\u5B9A\u65F6\u5019\u9700\u8981\u7684\u6B21\u6570\uFF0Cj \u4E3A\u5F53\u524D\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u8865\u503C\u3002</p><p>\u4E0D\u8FC7\u8FD9\u79CD\u65B9\u6CD5\u597D\u50CF\u4E5F\u5F88\u8D39\u65F6\u95F4\uFF0C\u548C\u5185\u5B58\uFF0C\u5728 leetcode \u4E0A\u6548\u7387\u597D\u50CF\u4E0D\u9AD8\u3002</p><p><strong>\u52A8\u6001\u89C4\u5212</strong>\uFF1A\u91C7\u7528\u52A8\u6001\u89C4\u5212\u6765\u6C42\u89E3\u3002</p><p>\u5982\u679C arr[i][j] = true \u8868\u793A\u5B57\u7B26\u4E32 s{i,j}\u4E3A\u56DE\u6587\u4E32\u7684\u8BDD\uFF0C\u5982\u679C s[i-1]===s[j+1],\u90A3\u4E48 arr[i-1][j+1]\u4E5F\u662F\u4E00\u4E2A\u56DE\u6587\u5B57\u7B26\u4E32\uFF0C\u4F9D\u6B21\u7C7B\u63A8\u3002\u6700\u7EC8\u65B9\u7A0B\u4E3A\uFF1AP{i,j} = P{i-1,j+1}^(S_i === S_j),\u5176\u4E2D j-i \u5DEE\u503C\u6700\u5927\u7684\u503C\u5BF9\u5E94\u5F97\u5B57\u7B26\u4E32\u5C31\u662F\u9898\u89E3\u3002</p><p>\u6BCF\u4E00\u4E2A arr[i][j]\u5F97\u503C\u4FDD\u5B58\u4F7F\u7528\uFF0C\u5982\u679C\u6EE1\u8DB3\u6761\u4EF6\u5C31\u7F6E\u4E3A arr[i][j] = true,\u521D\u59CB\u6761\u4EF6\u663E\u7136\u4E3A i=j \u5F97\u65F6\u5019\uFF0C\u672C\u8EAB\u5C31\u662F\u56DE\u6587\u5B57\u7B26\u4E32\u3002\u4F8B\u5982\u5B57\u7B26\u4E32<code>saaaa</code>\uFF0C\u5B83\u5F97\u6240\u4EE5\u60C5\u51B5\u5982\u4E0B\u56FE\u6240\u793A\uFF1A</p><img src="`+a+`" width="100%" height="400px"><p>\u521D\u59CB\u5316\u4E00\u4E2A\u4E8C\u7EF4\u6570\u7EC4\uFF0C\u5C06\u5F53\u4E2A\u5B57\u7B26\u5F97\u60C5\u51B5\u5168\u90E8\u7F6E\u4E3A true\u3002\u5176\u4F59\u4E3A false\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> sLength<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> j<span class="token punctuation">)</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u53CC\u91CD\u5FAA\u73AF\u8FDB\u884C\u904D\u5386\u4E8C\u7EF4\u6570\u7EC4\uFF0C\u5982\u679C s[i] ===s[j],\u90A3\u4E48\u5C31\u53BB\u6BD4\u8F83\u5F53\u524D\u7D22\u5F15\u5F97\u63D2\u503C\uFF0C\u5982\u679C\u5C0F\u4E8E\u4E8C\uFF0C\u4F8B\u5982\u4E0A\u56FE\u4E2D\u5F97<code>arr[1][3]\u5BF9\u5E94\u5F97\u5B57\u7B26\u4E32</code>aaa\`\uFF0C\u4E2D\u95F4\u53EA\u6709\u4E00\u4E2A\u5B57\u7B26\u5F97\u60C5\u51B5\u4E0B\uFF0C\u90A3\u4E48\u5F53\u524D\u5B57\u7B26\u80AF\u5B9A\u662F\u4E00\u4E2A\u56DE\u6587\u5B57\u7B26\u4E32\u3002</p><p>\u5982\u679C\u4E0D\u662F\u8FD9\u4E2A\u60C5\u51B5\uFF0C\u5C31\u8FDB\u884C\u7F29\u51CF\u6BD4\u8F83\uFF0C\u5982\u679C arr[i-1][j+1]\u4E3A true\uFF0C\u5C31\u6EE1\u8DB3\u60C5\u51B5\uFF0C\u518D\u53BB\u6BD4\u8F83 length \u8FDB\u884C\u66FF\u6362\u3002\u6700\u540E\u5F97 start \u548C end \u5F97\u503C\u5C31\u662F\u9898\u89E3\u6240\u6C42\u5F97\u5B57\u7B26\u4E32\u8D77\u59CB\u4F4D\u7F6E\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> sLength<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">-</span> i <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">||</span> arr<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">&lt;</span> j <span class="token operator">-</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          start <span class="token operator">=</span> i<span class="token punctuation">;</span>
          end <span class="token operator">=</span> j<span class="token punctuation">;</span>
          length <span class="token operator">=</span> j <span class="token operator">-</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5982\u4E0A\u4EE3\u7801\u5F85 leetcode \u8FD0\u884C\u4F1A\u5BFC\u81F4\u6D4B\u8BD5\u7528\u4F8B\u901A\u8FC7\u4E0D\u5B8C\u5168\u3002\u4F8B\u5982\u5728\u6C42\u89E3\u5B57\u7B26\u4E32<code>aaaa</code>\u5F97\u65F6\u5019\uFF0C\u5B83\u672C\u8EAB\u5C31\u662F\u4E00\u4E2A\u56DE\u6587\u5B57\u7B26\u4E32\uFF0C\u7136\u800C\u5728\u5224\u65AD<code>arr[0][3]</code>\u5F97\u65F6\u5019\uFF0C\u6309\u7167\u4EE3\u7801\u903B\u8F91\uFF0Cs[0]\u548C s[3]\u76F8\u7B49\uFF0C\u5DEE\u503C\u5927\u4E8E\u4E8C\uFF0C\u5C31\u53BB\u5224\u65AD arr[1][2]\u5F97\u5E03\u5C14\u503C\uFF0C\u7531\u4E8E\u5FAA\u73AF\u5F97\u95EE\u9898\uFF0C\u6B64\u65F6 arr[1][2]\u8FD8\u672A\u8FDB\u884C\u6BD4\u8F83\uFF0C\u5C31\u5BFC\u81F4\u5224\u65AD\u4E3A false\uFF0C\u6C42\u89E3\u9519\u8BEF\u3002</p><p>\u6240\u4EE5\u4E0A\u9762\u4EE3\u7801\u5F97\u5FAA\u73AF\u6709\u95EE\u9898\uFF0Carr[i][j]\u5F97\u503C\u662F\u4F9D\u8D56\u4E8E arr[i-1][j+1]\u5F97\u503C\uFF0C\u4E5F\u5C31\u662F\u957F\u5B57\u7B26\u4E32\u4F9D\u8D56\u4E8E\u77ED\u5B57\u7B26\u4E32\u3002\u4E4B\u524D\u5F97\u5FAA\u73AF\u5BFC\u81F4\u77ED\u5B57\u7B26\u4E32\u8FD8\u6CA1\u6709\u6C42\u503C\uFF0C\u5C31\u53BB\u5224\u65AD\u957F\u5B57\u7B26\u4E32\uFF0C\u6240\u4EE5\u6D4B\u8BD5\u7528\u4F8B\u4E0D\u901A\u8FC7\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">longestPalindrome</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> end <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> sLength <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> sLength<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> j<span class="token punctuation">)</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token comment">// \u751F\u6210\u4E8C\u7EF4\u6570\u7EC4</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sLength<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> sLength<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> j <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">||</span> arr<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// i -j,j-&gt; start</span>
          arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">&lt;</span> i <span class="token operator">-</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            start <span class="token operator">=</span> j<span class="token punctuation">;</span>
            end <span class="token operator">=</span> i<span class="token punctuation">;</span>
            length <span class="token operator">=</span> i <span class="token operator">-</span> j<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">longestPalindrome</span><span class="token punctuation">(</span><span class="token string">&quot;daaaa&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p>\u672A\u5B8C\u5F85\u7EED</p></div>`,55);function o(e,c){return t}var u=n(p,[["render",o],["__file","index.html.vue"]]);export{u as default};
